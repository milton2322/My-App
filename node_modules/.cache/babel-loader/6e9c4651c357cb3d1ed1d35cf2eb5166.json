{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\src\\\\components\\\\WeatherLocation\\\\index.js\";\nimport React, { Component } from 'react';\nimport Location from './Location';\nimport WeatherData from './WeatherData'; //import transforWeather from '../../services/transformWeather';\n\nimport './style.css';\nvar location = \"Cali,col\";\nvar api_key = \"30c7e4e5097e8f650b23c7225eee4c53\";\nvar api_weather = \"http://api.openweathermap.org/data/2.5/weather?q=\".concat(location, \"&appid=\").concat(api_key);\nvar data1 = {\n  tempeture: 20,\n  weatherState: CLEAR_DAY,\n  humidity: 10,\n  wind: '10 m/s'\n};\n\nvar WeatherLocation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherLocation, _Component);\n\n  function WeatherLocation() {\n    var _this;\n\n    _classCallCheck(this, WeatherLocation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeatherLocation).call(this));\n\n    _this.getTemp = function (kelvin) {\n      return convert(kelvin).from('K').to('C'); //.toFixed(2) cuando los valores son muy grandes con esto los recorta\n    };\n\n    _this.getWeatherState = function (weather) {\n      return CLEAR_DAY;\n    };\n\n    _this.getData = function (weather_data) {\n      var _weather_data$main = weather_data.main,\n          humidity = _weather_data$main.humidity,\n          temp = _weather_data$main.temp;\n      var speed = weather_data.wind.speed;\n\n      var weatherState = _this.getWeatherState(_this.weather);\n\n      var tempeture = _this.getTemp(temp);\n\n      var data = {\n        humidity: humidity,\n        tempeture: tempeture,\n        weatherState: weatherState,\n        wind: \"\".concat(speed, \" m/s\")\n      };\n      return data;\n    };\n\n    _this.handleUpdateClick = function () {\n      fetch(api_weather).then(function (data) {\n        console.log(data);\n        return data.json();\n      }).then(function (weather_data) {\n        debugger;\n\n        var data = _this.getData(weather_data);\n\n        _this.setState({\n          data: data\n        });\n\n        console.log(weather_data);\n      });\n      /*this.setState ({\r\n          data: data2\r\n      });*/\n\n      console.log(\"actualizado\");\n    };\n\n    _this.render = function () {\n      var _this$state = _this.state,\n          city = _this$state.city,\n          data = _this$state.data;\n      return React.createElement(\"div\", {\n        className: \"weatherLocationCont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Location, {\n        city: _this.state.city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(WeatherData, {\n        data: _this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: _this.handleUpdateClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Actualizar\"));\n    };\n\n    _this.state = {\n      city: 'Caliio!',\n      data: data1\n    };\n    return _this;\n  }\n\n  return WeatherLocation;\n}(Component);\n\nexport default WeatherLocation;","map":{"version":3,"sources":["C:\\Users\\Usuario\\Documents\\project\\WeatherApp\\my-app\\src\\components\\WeatherLocation\\index.js"],"names":["React","Component","Location","WeatherData","location","api_key","api_weather","data1","tempeture","weatherState","CLEAR_DAY","humidity","wind","WeatherLocation","getTemp","kelvin","convert","from","to","getWeatherState","weather","getData","weather_data","main","temp","speed","data","handleUpdateClick","fetch","then","console","log","json","setState","render","state","city"],"mappings":"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","sourcesContent":["import React, {Component}  from 'react';\r\nimport Location from './Location';\r\nimport WeatherData from './WeatherData';\r\n//import transforWeather from '../../services/transformWeather';\r\n\r\nimport './style.css';\r\n\r\nconst location = \"Cali,col\";\r\nconst api_key =\"30c7e4e5097e8f650b23c7225eee4c53\";\r\nconst api_weather = `http://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${api_key}`;\r\n\r\nconst data1 = {\r\n    tempeture: 20,\r\n    weatherState: CLEAR_DAY,\r\n    humidity: 10,\r\n    wind: '10 m/s',\r\n};\r\n\r\nclass WeatherLocation extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            city: 'Caliio!',\r\n            data: data1\r\n        }; \r\n    }\r\n\r\n    getTemp = kelvin => {\r\n        return convert(kelvin).from('K').to('C');//.toFixed(2) cuando los valores son muy grandes con esto los recorta\r\n    }\r\n\r\n    getWeatherState = weather => {\r\n        return CLEAR_DAY;\r\n    }\r\n\r\n    getData = weather_data => {\r\n        const { humidity, temp } = weather_data.main;\r\n        const { speed } = weather_data.wind;\r\n        const weatherState = this.getWeatherState(this.weather);\r\n        const tempeture= this.getTemp(temp);\r\n\r\n        const data = {\r\n            humidity,\r\n            tempeture,\r\n            weatherState,\r\n            wind: `${speed} m/s`,\r\n        }\r\n        return data;\r\n    }\r\n\r\n    handleUpdateClick = () => {\r\n        fetch(api_weather).then(data => {\r\n            console.log(data);\r\n            return data.json();\r\n        }).then( weather_data => {\r\n            debugger;\r\n            const data = this.getData(weather_data);\r\n            this.setState({ data });\r\n            console.log(weather_data);\r\n            \r\n        });\r\n        /*this.setState ({\r\n            data: data2\r\n        });*/\r\n        console.log(\"actualizado\");\r\n        \r\n    }\r\n\r\n    render = () => {    \r\n        const { city, data } = this.state;\r\n        return(\r\n        <div className=\"weatherLocationCont\">\r\n            <Location city={this.state.city} />\r\n            <WeatherData data={this.state.data} /> \r\n            <button  onClick={this.handleUpdateClick}>Actualizar</button>       \r\n        </div>  \r\n        )\r\n\r\n    };\r\n}\r\n\r\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}