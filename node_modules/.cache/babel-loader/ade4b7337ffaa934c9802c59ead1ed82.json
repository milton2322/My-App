{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\project\\\\WeatherApp\\\\my-app\\\\src\\\\components\\\\WeatherLocation\\\\index.js\";\nimport React, { Component } from 'react';\nimport Location from './Location';\nimport transforWeather from '../../services/transformWeather';\nimport WeatherData from './WeatherData';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './style.css';\nvar city = \"Cali,col\";\nvar api_key = \"30c7e4e5097e8f650b23c7225eee4c53\";\nvar url = \"http://api.openweathermap.org/data/2.5/weather\"; //const api_weather = `http://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${api_key}`;\n\nvar api_weather = \"\".concat(url, \"?q=\").concat(city, \"&appid=\").concat(api_key);\n\nvar WeatherLocation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherLocation, _Component);\n\n  function WeatherLocation() {\n    var _this;\n\n    _classCallCheck(this, WeatherLocation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeatherLocation).call(this));\n\n    _this.handleUpdateClick = function () {\n      fetch(api_weather).then(function (data) {\n        console.log(data);\n        return data.json();\n      }).then(function (weather_data) {\n        //debugger;\n        var data = transforWeather(weather_data);\n\n        _this.setState({\n          data: data\n        });\n\n        console.log(weather_data);\n      });\n      console.log(\"actualizado\");\n    };\n\n    _this.render = function () {\n      var _this$state = _this.state,\n          city = _this$state.city,\n          data = _this$state.data;\n      return React.createElement(\"div\", {\n        className: \"weatherLocationCont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Location, {\n        city: city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), data ? React.createElement(WeatherData, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }) : React.createElement(CircularProgress, {\n        size: 40,\n        thickness: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    };\n\n    _this.state = {\n      city: city,\n      data: null\n    };\n    return _this;\n  }\n  /*getTemp = kelvin => {\r\n      return convert(kelvin).from('K').to('C');//.toFixed(2) cuando los valores son muy grandes con esto los recorta\r\n  }\r\n  //el parametro weather no esta haciendo nada nisiquiera esta definidad\r\n  //se quito en transformWeather porque me generaba error\r\n  getWeatherState = weather => {\r\n      debugger;\r\n      return CLEAR_DAY;\r\n  }\r\n    getData = weather_data => {\r\n      const { humidity, temp } = weather_data.main;\r\n      const { speed } = weather_data.wind;\r\n      const weatherState = this.getWeatherState(this.weather);\r\n      const tempeture= this.getTemp(temp);\r\n        const data = {\r\n          humidity,\r\n          tempeture,\r\n          weatherState,\r\n          wind: `${speed} m/s`,\r\n      }\r\n      return data;\r\n  }*/\n\n\n  _createClass(WeatherLocation, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.handleUpdateClick();\n    }\n  }]);\n\n  return WeatherLocation;\n}(Component);\n\nexport default WeatherLocation;","map":{"version":3,"sources":["C:\\Users\\Usuario\\Documents\\project\\WeatherApp\\my-app\\src\\components\\WeatherLocation\\index.js"],"names":["React","Component","Location","transforWeather","WeatherData","CircularProgress","city","api_key","url","api_weather","WeatherLocation","handleUpdateClick","fetch","then","data","console","log","json","weather_data","setState","render","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAO,aAAP;AAEA,IAAMC,IAAI,GAAG,UAAb;AACA,IAAMC,OAAO,GAAE,kCAAf;AACA,IAAMC,GAAG,GAAG,gDAAZ,C,CACA;;AACA,IAAMC,WAAW,aAAMD,GAAN,gBAAeF,IAAf,oBAA6BC,OAA7B,CAAjB;;IAGMG,e;;;;;AAEF,6BAAa;AAAA;;AAAA;;AACT;;AADS,UAiCbC,iBAjCa,GAiCO,YAAM;AACtBC,MAAAA,KAAK,CAACH,WAAD,CAAL,CAAmBI,IAAnB,CAAwB,UAAAC,IAAI,EAAI;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,eAAOA,IAAI,CAACG,IAAL,EAAP;AACH,OAHD,EAGGJ,IAHH,CAGS,UAAAK,YAAY,EAAI;AACrB;AACA,YAAMJ,IAAI,GAAGX,eAAe,CAACe,YAAD,CAA5B;;AACA,cAAKC,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAJA;AAAF,SAAd;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AAEH,OATD;AAUAH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEH,KA9CY;;AAAA,UAsDbI,MAtDa,GAsDJ,YAAM;AAAA,wBACY,MAAKC,KADjB;AAAA,UACHf,IADG,eACHA,IADG;AAAA,UACGQ,IADH,eACGA,IADH;AAEX,aACA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAER,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEMQ,IAAI,GAAG,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACF,oBAAC,gBAAD;AAAkB,QAAA,IAAI,EAAE,EAAxB;AAA4B,QAAA,SAAS,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,CADA;AAUH,KAlEY;;AAET,UAAKO,KAAL,GAAa;AACTf,MAAAA,IAAI,EAAJA,IADS;AAETQ,MAAAA,IAAI,EAAE;AAFG,KAAb;AAFS;AAMZ;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;yCAwCqB;AACjB,WAAKH,iBAAL;AACH;;;;EApDyBV,S;;AAuE9B,eAAeS,eAAf","sourcesContent":["import React, {Component}  from 'react';\r\nimport Location from './Location';\r\nimport transforWeather from '../../services/transformWeather';\r\nimport WeatherData from './WeatherData';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './style.css';\r\n\r\nconst city = \"Cali,col\";\r\nconst api_key =\"30c7e4e5097e8f650b23c7225eee4c53\";\r\nconst url = \"http://api.openweathermap.org/data/2.5/weather\";\r\n//const api_weather = `http://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${api_key}`;\r\nconst api_weather = `${url}?q=${city}&appid=${api_key}`;\r\n\r\n\r\nclass WeatherLocation extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            city,\r\n            data: null\r\n        }; \r\n    }    \r\n\r\n    /*getTemp = kelvin => {\r\n        return convert(kelvin).from('K').to('C');//.toFixed(2) cuando los valores son muy grandes con esto los recorta\r\n    }\r\n    //el parametro weather no esta haciendo nada nisiquiera esta definidad\r\n    //se quito en transformWeather porque me generaba error\r\n    getWeatherState = weather => {\r\n        debugger;\r\n        return CLEAR_DAY;\r\n    }\r\n\r\n    getData = weather_data => {\r\n        const { humidity, temp } = weather_data.main;\r\n        const { speed } = weather_data.wind;\r\n        const weatherState = this.getWeatherState(this.weather);\r\n        const tempeture= this.getTemp(temp);\r\n\r\n        const data = {\r\n            humidity,\r\n            tempeture,\r\n            weatherState,\r\n            wind: `${speed} m/s`,\r\n        }\r\n        return data;\r\n    }*/\r\n\r\n    handleUpdateClick = () => {\r\n        fetch(api_weather).then(data => {\r\n            console.log(data);\r\n            return data.json();\r\n        }).then( weather_data => {\r\n            //debugger;\r\n            const data = transforWeather(weather_data);\r\n            this.setState({ data });\r\n            console.log(weather_data);\r\n            \r\n        });\r\n        console.log(\"actualizado\");\r\n        \r\n    }\r\n\r\n    componentWillMount() {\r\n        this.handleUpdateClick();\r\n    }\r\n\r\n    \r\n\r\n    render = () => {    \r\n        const { city, data } = this.state;\r\n        return(\r\n        <div className=\"weatherLocationCont\">\r\n            <Location city={city} />\r\n            { data ? <WeatherData data={data} /> :\r\n                <CircularProgress size={40} thickness={5} />\r\n            } \r\n                        \r\n        </div>  \r\n        )\r\n\r\n    };\r\n}\r\n\r\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}