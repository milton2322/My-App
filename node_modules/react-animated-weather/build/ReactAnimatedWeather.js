'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _skycons = require('./skycons');

var _skycons2 = _interopRequireDefault(_skycons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReactAnimatedWeather = function (_React$Component) {
  _inherits(ReactAnimatedWeather, _React$Component);

  function ReactAnimatedWeather(props) {
    _classCallCheck(this, ReactAnimatedWeather);

    var _this = _possibleConstructorReturn(this, (ReactAnimatedWeather.__proto__ || Object.getPrototypeOf(ReactAnimatedWeather)).call(this, props));

    _this.skyconIcon = new _skycons2.default({
      color: props.color
    });
    return _this;
  }

  _createClass(ReactAnimatedWeather, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          icon = _props.icon,
          animate = _props.animate;

      this.setIcon(icon, animate);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.skyconIcon = new _skycons2.default({
        color: nextProps.color
      });

      this.setIcon(nextProps.icon, nextProps.animate);
      this.forceUpdate();
    }
  }, {
    key: 'setIcon',
    value: function setIcon(icon, animate) {
      this.skyconIcon.add(this.skycon, _skycons2.default[icon]);

      if (animate) {
        this.skyconIcon.play();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var size = this.props.size;

      return _react2.default.createElement('canvas', {
        ref: function ref(canvas) {
          _this2.skycon = canvas;
        },
        width: size,
        height: size
      });
    }
  }]);

  return ReactAnimatedWeather;
}(_react2.default.Component);

ReactAnimatedWeather.defaultProps = {
  animate: true,
  size: 64,
  color: 'black'
};

ReactAnimatedWeather.propTypes = {
  icon: _propTypes2.default.oneOf(['CLEAR_DAY', 'CLEAR_NIGHT', 'PARTLY_CLOUDY_DAY', 'PARTLY_CLOUDY_NIGHT', 'CLOUDY', 'RAIN', 'SLEET', 'SNOW', 'WIND', 'FOG']).isRequired,
  animate: _propTypes2.default.bool,
  size: _propTypes2.default.number,
  color: _propTypes2.default.string
};

exports.default = ReactAnimatedWeather;